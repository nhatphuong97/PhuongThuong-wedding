{"version":3,"file":"static/js/346.eb37484c.chunk.js","mappings":"qMAwDA,MA3CA,SAAwBA,GAYtB,IAAQC,GAAQC,EAAAA,EAAAA,IAAY,CAC1BC,MAAO,GACPC,WAAY,CAAC,MAAO,OACpBC,WAAY,CAAC,GAAI,MAHXJ,IAMR,OACEK,EAAAA,EAAAA,KAAA,OAAKC,UAAU,yEAAwEC,UACrFF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,4CAA2CC,UACxDF,EAAAA,EAAAA,KAAA,OACEG,QAAQ,OACRR,IAAKA,EACLS,IAAKC,EACLC,IAAI,GACJL,UAAU,wDAepB,C","sources":["FeatureTodo/component/ParallaxDevide/index.jsx"],"sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./style.scss\";\r\nimport image1 from \"./../../../img/bg-rung.webp\";\r\nimport {\r\n  ParallaxProvider,\r\n  useParallax,\r\n  ParallaxBanner,\r\n  ParallaxBannerLayer,\r\n  Parallax,\r\n} from \"react-scroll-parallax\";\r\nParallaxDevide.propTypes = {};\r\n\r\nfunction ParallaxDevide(props) {\r\n  // window.addEventListener(\"scroll\", function () {\r\n  //   let pageY = window.pageYOffset;\r\n  //   let pageYend = window.page;\r\n  //   console.log({ pageY: pageY });\r\n  //   let main = this.document.getElementById(\"parallax\");\r\n  //   main.style.backgroundPositionY = pageY * 0.5 + \"px\";\r\n  //   //5417 = 10%\r\n  //   console.log(main.style.backgroundPositionY);\r\n  //   console.log(pageY);\r\n  // });\r\n\r\n  const { ref } = useParallax({\r\n    speed: 10,\r\n    translateX: [\"-30\", \"-10\"],\r\n    translateY: [\"\", \"\"],\r\n  });\r\n\r\n  return (\r\n    <div className=\"bg-red-300 h-[500px] w-full flex flex-col justify-center items-center \">\r\n      <div className=\"bg-black h-full w-[800px] overflow-hidden\">\r\n        <img\r\n          loading=\"lazy\"\r\n          ref={ref}\r\n          src={image1}\r\n          alt=\"\"\r\n          className=\"h-[500px] w-[1200px] object-cover max-w-[1200px]\"\r\n        />\r\n      </div>\r\n\r\n      {/* <div className=\"h-[300px] w-[500px] bg-black overflow-hidden\">\r\n        <Parallax\r\n          speed={10}\r\n          scale={[1, 1]}\r\n          translateX={[-20, 10]}\r\n          style={{ overflow: \"hidden\" }}\r\n          translateY={[\"\", \"\"]}\r\n        ></Parallax>\r\n      </div> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ParallaxDevide;\r\n"],"names":["props","ref","useParallax","speed","translateX","translateY","_jsx","className","children","loading","src","image1","alt"],"sourceRoot":""}